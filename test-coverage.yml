name: Test Coverage

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-coverage:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint
        continue-on-error: false

      - name: Run tests with coverage
        run: npm run test:coverage
        env:
          CI: true

      - name: Check coverage thresholds
        run: |
          echo "Checking if coverage meets minimum thresholds..."
          # Jest will fail if coverage is below thresholds defined in jest.config.js
          # The thresholds are: branches: 70%, functions: 70%, lines: 70%, statements: 70%

      - name: Upload coverage to Codecov (optional)
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Archive coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-node-${{ matrix.node-version }}
          path: coverage/
          retention-days: 30

      - name: Comment coverage on PR
        if: github.event_name == 'pull_request' && matrix.node-version == '20.x'
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
          lcov-file: ./coverage/lcov.info
          github-token: ${{ secrets.GITHUB_TOKEN }}
          delete-old-comments: true

  coverage-summary:
    runs-on: ubuntu-latest
    needs: test-coverage
    if: always()

    steps:
      - name: Coverage Summary
        run: |
          echo "Test coverage job completed."
          echo "Check the artifacts for detailed coverage reports."
